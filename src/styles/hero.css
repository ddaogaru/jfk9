/* --- hero.css --- */
:root {
  /* Site rhythm: adjust if your global token differs */
  --space-15: 15px;

  /* Choose the hero’s symmetric padding once (top == bottom).
     Measure in DevTools the current intended top gap from header->top of text. */
  --hero-pad: 90px; /* site header-to-lede gap */
  --hero-content-max: 1152px; /* matches header logo/contact span */
}

/* Scope strictly to hero to avoid collateral changes */
#hero.hero {
  box-sizing: border-box;
  padding-block: var(--hero-pad);      /* symmetric top & bottom */
}

/* Center text blocks regardless of the video’s centering */
#hero .hero__lede,
#hero .hero__actions {
  width: min(100%, var(--hero-content-max));
  max-width: var(--hero-content-max);
  margin-inline: auto;                 /* center the block itself */
  text-align: center;                  /* center the text inside */
}

/* Ensure the video stays centered and not used as the alignment anchor for text */
#hero .hero__media {
  width: min(100%, var(--hero-content-max));
  max-width: var(--hero-content-max);
  margin-inline: auto;                 /* center the media wrapper */
  margin-block: calc(var(--space-15) * 2);
}

#hero .hero__media video,
#hero .hero__media iframe {
  display: block;
  margin-inline: auto;                 /* center the media element */
}

/* Ensure consistent vertical rhythm within the hero only */
#hero .hero__lede > * + *,
#hero .hero__actions > * + * {
  margin-block-start: var(--space-15);
}

#hero .hero__lede {
  display: grid;
  justify-items: center;
}

#hero .hero__actions {
  display: grid;
  justify-items: center;
}

#hero .hero__actions > .flex {
  width: 100%;
}

/* Neutralize edge-margin side effects: last/first child margins won’t distort top/bottom spacing */
#hero > :first-child { margin-block-start: 0 !important; }
#hero > :last-child  { margin-block-end: 0 !important; }

/* Guardrails: never touch header/footer/buttons */
header,
footer,
.btn,
.button,
button {
  /* no rules here */
}
