{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dd/Desktop/jfk9/components/ui/scroll-indicator.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\nconst ScrollIndicator = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.scrollY;\n      const docHeight =\n        document.documentElement.scrollHeight - window.innerHeight;\n      const newProgress =\n        docHeight > 0 ? Math.min(scrollTop / docHeight, 1) : 0;\n\n      setProgress(newProgress);\n      setIsVisible(scrollTop > 100);\n    };\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll, { passive: true });\n    window.addEventListener(\"resize\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      window.removeEventListener(\"resize\", handleScroll);\n    };\n  }, []);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"fixed bottom-4 right-4 w-20 h-20 rounded-full flex items-center justify-center bg-white shadow-lg overflow-hidden z-50 transition-all duration-300\">\n      <svg className=\"w-full h-full -rotate-90\" viewBox=\"0 0 100 100\">\n        {/* Background circle */}\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"40\"\n            className=\"stroke-brand-navy/20\"\n          strokeWidth=\"8\"\n          fill=\"none\"\n        />\n        {/* Progress circle */}\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"40\"\n            className=\"stroke-brand-red\"\n          strokeWidth=\"8\"\n          fill=\"none\"\n          strokeDasharray=\"251.2\"\n          strokeDashoffset={251.2 * (1 - progress)}\n          strokeLinecap=\"round\"\n        />\n      </svg>\n      <div\n        className=\"absolute inset-0 flex items-center justify-center font-semibold text-sm [background:linear-gradient(135deg,hsl(212,88%,13%)_0%,hsl(336,90%,35%)_100%)] [background-clip:text] [-webkit-text-fill-color:transparent]\"\n      >\n        SCROLL\n      </div>\n    </div>\n  );\n};\n\nexport default ScrollIndicator;\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,MAAM,kBAAkB;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IAEzC,IAAA,kNAAS,EAAC;QACR,MAAM,eAAe;YACnB,MAAM,YAAY,OAAO,OAAO;YAChC,MAAM,YACJ,SAAS,eAAe,CAAC,YAAY,GAAG,OAAO,WAAW;YAC5D,MAAM,cACJ,YAAY,IAAI,KAAK,GAAG,CAAC,YAAY,WAAW,KAAK;YAEvD,YAAY;YACZ,aAAa,YAAY;QAC3B;QAEA;QACA,OAAO,gBAAgB,CAAC,UAAU,cAAc;YAAE,SAAS;QAAK;QAChE,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO;YACL,OAAO,mBAAmB,CAAC,UAAU;YACrC,OAAO,mBAAmB,CAAC,UAAU;QACvC;IACF,GAAG,EAAE;IAEL,IAAI,CAAC,WAAW,OAAO;IAEvB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;gBAA2B,SAAQ;;kCAEhD,8OAAC;wBACC,IAAG;wBACH,IAAG;wBACH,GAAE;wBACA,WAAU;wBACZ,aAAY;wBACZ,MAAK;;;;;;kCAGP,8OAAC;wBACC,IAAG;wBACH,IAAG;wBACH,GAAE;wBACA,WAAU;wBACZ,aAAY;wBACZ,MAAK;wBACL,iBAAgB;wBAChB,kBAAkB,QAAQ,CAAC,IAAI,QAAQ;wBACvC,eAAc;;;;;;;;;;;;0BAGlB,8OAAC;gBACC,WAAU;0BACX;;;;;;;;;;;;AAKP;uCAEe","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dd/Desktop/jfk9/components/performance-monitor.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\n\n// Define Google Analytics gtag type\ndeclare global {\n  interface Window {\n    gtag?: (\n      command: string,\n      action: string,\n      parameters: Record<string, unknown>\n    ) => void;\n  }\n}\n\nexport default function PerformanceMonitor() {\n  useEffect(() => {\n    // Enhanced performance monitoring for static HTML\n    if (typeof window !== \"undefined\" && \"performance\" in window) {\n      // Track page load performance\n      const trackPageLoad = () => {\n        const navigation = performance.getEntriesByType(\n          \"navigation\",\n        )[0] as PerformanceNavigationTiming;\n        if (navigation) {\n          const metrics = {\n            dns: navigation.domainLookupEnd - navigation.domainLookupStart,\n            tcp: navigation.connectEnd - navigation.connectStart,\n            request: navigation.responseStart - navigation.requestStart,\n            response: navigation.responseEnd - navigation.responseStart,\n            dom:\n              navigation.domContentLoadedEventEnd -\n              navigation.domContentLoadedEventStart,\n            load: navigation.loadEventEnd - navigation.loadEventStart,\n            total: navigation.loadEventEnd - navigation.fetchStart,\n          };\n\n          // Send to analytics (if configured)\n          if (typeof window !== \"undefined\" && window.gtag) {\n            window.gtag(\"event\", \"page_load_time\", {\n              event_category: \"Performance\",\n              event_label: \"Static HTML\",\n              value: Math.round(metrics.total),\n            });\n          }\n        }\n      };\n\n      // Monitor Largest Contentful Paint (LCP)\n      const observer = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === \"largest-contentful-paint\") {\n            const lcp = entry.startTime;\n\n            // Track LCP performance\n            if (typeof window !== \"undefined\" && window.gtag) {\n              window.gtag(\"event\", \"lcp\", {\n                event_category: \"Web Vitals\",\n                event_label: \"Largest Contentful Paint\",\n                value: Math.round(lcp),\n              });\n            }\n          }\n        }\n      });\n\n      observer.observe({ entryTypes: [\"largest-contentful-paint\"] });\n\n      // Monitor First Input Delay (FID)\n      const fidObserver = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === \"first-input\") {\n            const fidEntry = entry as PerformanceEventTiming;\n            const fid = fidEntry.processingStart - fidEntry.startTime;\n\n            if (typeof window !== \"undefined\" && window.gtag) {\n              window.gtag(\"event\", \"fid\", {\n                event_category: \"Web Vitals\",\n                event_label: \"First Input Delay\",\n                value: Math.round(fid),\n              });\n            }\n          }\n        }\n      });\n\n      fidObserver.observe({ entryTypes: [\"first-input\"] });\n\n      // Monitor Cumulative Layout Shift (CLS)\n      let clsValue = 0;\n      const clsObserver = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const layoutShiftEntry = entry as any;\n          if (!layoutShiftEntry.hadRecentInput) {\n            clsValue += layoutShiftEntry.value;\n          }\n        }\n\n        if (typeof window !== \"undefined\" && window.gtag) {\n          window.gtag(\"event\", \"cls\", {\n            event_category: \"Web Vitals\",\n            event_label: \"Cumulative Layout Shift\",\n            value: Math.round(clsValue * 1000), // Convert to integer\n          });\n        }\n      });\n\n      clsObserver.observe({ entryTypes: [\"layout-shift\"] });\n\n      // Monitor resource loading\n      const resourceObserver = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === \"resource\") {\n            const resource = entry as PerformanceResourceTiming;\n            if (resource.duration > 1000) {\n              // Log slow resources\n              // console.warn('🐌 Slow resource:', resource.name, resource.duration, 'ms');\n            }\n          }\n        }\n      });\n\n      resourceObserver.observe({ entryTypes: [\"resource\"] });\n\n      // Track page load when complete\n      if (document.readyState === \"complete\") {\n        trackPageLoad();\n      } else {\n        window.addEventListener(\"load\", trackPageLoad);\n      }\n\n      // Track service worker registration\n      if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(() => {\n          // Service worker ready\n        });\n      }\n\n      return () => {\n        observer.disconnect();\n        fidObserver.disconnect();\n        clsObserver.disconnect();\n        resourceObserver.disconnect();\n        window.removeEventListener(\"load\", trackPageLoad);\n      };\n    }\n  }, []);\n\n  return null;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAee,SAAS;IACtB,IAAA,kNAAS,EAAC;QACR,kDAAkD;QAClD,IAAI,gBAAkB,eAAe,iBAAiB;;IAiIxD,GAAG,EAAE;IAEL,OAAO;AACT","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dd/Desktop/jfk9/components/service-worker-register.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\n\nexport default function ServiceWorkerRegister() {\n  useEffect(() => {\n    if (typeof window !== \"undefined\" && \"serviceWorker\" in navigator) {\n      const handleLoad = () => {\n        navigator.serviceWorker\n          .register(\"/sw.js\")\n          .then(() => {\n            // Registration successful\n          })\n          .catch(() => {\n            // Registration failed\n          });\n      };\n\n      window.addEventListener(\"load\", handleLoad);\n      \n      return () => {\n        window.removeEventListener(\"load\", handleLoad);\n      };\n    }\n  }, []);\n\n  return null;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAIe,SAAS;IACtB,IAAA,kNAAS,EAAC;QACR,IAAI,gBAAkB,eAAe,mBAAmB;;IAkB1D,GAAG,EAAE;IAEL,OAAO;AACT","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dd/Desktop/jfk9/components/error-boundary.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: React.ReactNode;\r\n  fallback?: React.ReactNode;\r\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean;\r\n  error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    // Log error securely - avoid logging sensitive information in production\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\r\n    } else {\r\n      // In production, log minimal information\r\n      console.error('An error occurred in a React component');\r\n    }\r\n    \r\n    // Call optional error callback\r\n    if (this.props.onError) {\r\n      this.props.onError(error, errorInfo);\r\n    }\r\n\r\n    // Report to analytics if available (with sanitized error message)\r\n    if (typeof window !== 'undefined' && window.gtag) {\r\n      window.gtag('event', 'exception', {\r\n        description: process.env.NODE_ENV === 'development' ? error.message : 'Component error',\r\n        fatal: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // Custom fallback UI\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      // Default fallback UI\r\n      return (\r\n        <div className=\"flex min-h-[200px] w-full items-center justify-center rounded-lg border border-destructive/20 bg-destructive/10 p-8\">\r\n          <div className=\"text-center space-y-2\">\r\n            <h3 className=\"text-lg font-semibold text-destructive\">\r\n              Something went wrong\r\n            </h3>\r\n            <p className=\"text-sm text-muted-foreground max-w-md\">\r\n              This component encountered an error. Please refresh the page or try again later.\r\n            </p>\r\n            <button\r\n              onClick={() => window.location.reload()}\r\n              className=\"mt-4 px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors\"\r\n            >\r\n              Refresh Page\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAeA,MAAM,sBAAsB,gNAAK,CAAC,SAAS;IACzC,YAAY,KAAyB,CAAE;QACrC,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;QAAM;IACjC;IAEA,OAAO,yBAAyB,KAAY,EAAsB;QAChE,OAAO;YAAE,UAAU;YAAM;QAAM;IACjC;IAEA,kBAAkB,KAAY,EAAE,SAA0B,EAAE;QAC1D,yEAAyE;QACzE,wCAA4C;YAC1C,QAAQ,KAAK,CAAC,kCAAkC,OAAO;QACzD;;QAKA,+BAA+B;QAC/B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;QAC5B;QAEA,kEAAkE;QAClE;;IAMF;IAEA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,qBAAqB;YACrB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC5B;YAEA,sBAAsB;YACtB,qBACE,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCAGvD,8OAAC;4BAAE,WAAU;sCAAyC;;;;;;sCAGtD,8OAAC;4BACC,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;4BACrC,WAAU;sCACX;;;;;;;;;;;;;;;;;QAMT;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF;uCAEe","debugId":null}}]
}